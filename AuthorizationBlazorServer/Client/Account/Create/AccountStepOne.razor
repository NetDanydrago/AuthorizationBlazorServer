@page "/identityserver4/AccountStepOne"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
<div class="container">
    <div class="row">
        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">
                    Crea Tu Cuenta Community Training
                </div>
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-12">
                            <label>Correo</label>
                            <input class="form-control" @bind="User.UserName" required>
                        </div>
                        <div class="form-group col-md-12">
                            <label>Contraseña</label>
                            <input type="password" @bind="User.Password" class="form-control" required>
                        </div>
                        <div class="form-group  col-md-12">
                            <label>Confirma tu contraseña</label>
                            <input type="password" @bind="VerifiedPassword" class="form-control" required>
                        </div>
                    </div>
                    <button class="btn btn-primary" @onclick="CreateAccount">Crear</button>
                </div>
            </div>
        </div>
            @if (Providers.Any())
            {
                <div class="col-sm-6">
                    <div class="card">
                        <div class="card-header">
                            <h2>External Account</h2>
                        </div>
                        <div class="card-body">
                            <ul class="list-inline">
                                @foreach (var provider in Providers)
                                {

                                    <li class="list-inline-item">
                                        <form action="@($"https://localhost:44300/External/Challenge")" method="post">
                                            <input hidden name="scheme" value="@provider.AuthenticationScheme" />
                                            <input hidden name="returnUrl" value="Agregar Despues ++" />
                                            <button class="btn btn-secondary"
                                                    type="submit">
                                                @provider.DisplayName
                                            </button>
                                        </form>
                                    </li>

                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
</div>


@code {

    string VerifiedPassword;

    List<ExternalProvider> Providers = new List<ExternalProvider>();

    UserViewModel User = new UserViewModel();

    protected async override Task OnInitializedAsync()
    {
        var Response = await HttpClient.GetAsync("account/ExternalProviders");
        if (Response.IsSuccessStatusCode)
        {
            Providers = await Response.Content.ReadFromJsonAsync<List<ExternalProvider>>();
        }
    }

    async void CreateAccount()
    {
        if(User.Password == VerifiedPassword)
        {
            var Response = await HttpClient.PostAsJsonAsync
                <UserViewModel>("api/identity/UserStepOne", User);
            if (Response.IsSuccessStatusCode)
            {
                string Id = await Response.Content.ReadAsStringAsync();
                string Email = Regex.Replace(User.UserName, 
                                @"(?<=[\w]{5})[\w-\._\+%]*(?=[\w]{0}@)",
                                m => new string('*', m.Length));
                NavigationManager.NavigateTo($"IdentityServer4/AccountValidateEmail/{Email}/{Id}");
            }
        }
    }
}
