@page "/identityserver4/register/apiscope"
@inject HttpClient HttpClient
@inject NavigationManager Navigation
<AuthorizeView Roles="sadmin">
    <Authorized>
        <Popper Show="@ShowPopper" Message="@Message" />
        <div class="container">
            <div class="card">
                <div class="card-header">
                    Registra Scope
                    <button class="btn btn-success" @onclick="Navigate" style="margin-left:50%">
                        Ver Scopes
                    </button>
                </div>
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="ApiScopeName">Nombre del Scope</label>
                            <input class="form-control" @bind="Scope.Name" id="ApiScopeName">
                        </div>
                        <div class="form-group col-md-6">
                            <label for="ApiScopeDisplayName">Nombre a mostrar del Scope</label>
                            <input class="form-control" @bind="Scope.DisplayName" id="ApiScopeDisplayName">
                        </div>
                    </div>
                    <button @onclick="RegisterScope" class="btn btn-primary">Registrar</button>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        No Tienes acceso al recurso.
    </NotAuthorized>
</AuthorizeView>


@code {

    string Message = string.Empty;

    bool ShowPopper;

    ScopeViewModel Scope = new ScopeViewModel();

    public async void RegisterScope()
    {
        var Response = await HttpClient.PostAsJsonAsync
            <ScopeViewModel>("api/identityserver/ApiScope", Scope);
        if (Response.IsSuccessStatusCode)
        {
            await SuccessPopper("Se registro permiso correctamente");
        }
    }

    private async Task SuccessPopper(string message)
    {
        Message = message;
        ShowPopper = true;
        StateHasChanged();
        await Task.Delay(3000);
        ShowPopper = false;
        StateHasChanged();
    }

    private void Navigate()
    {
        Navigation.NavigateTo("identityserver4/remove/apiscope");
    }
}
